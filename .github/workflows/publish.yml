name: Build & Release UniORM Binaries

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-linux:
    name: linux binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci

      # build with explicit output names
      - run: npx pkg . --targets node18-linux-x64 --output dist/uni-orm-node18-linux-x64
      - run: npx pkg . --targets node18-linux-arm64 --output dist/uni-orm-node18-linux-arm64
      - run: ls -la dist

      - name: Upload build artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries-${{ github.run_id }}
          path: |
            dist/uni-orm-node18-linux-x64
            dist/uni-orm-node18-linux-arm64

      - name: Upload to GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/uni-orm-node18-linux-x64
            dist/uni-orm-node18-linux-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: macOS binaries
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci

      # build with explicit output names
      - run: npx pkg . --targets node18-macos-x64 --output dist/uni-orm-node18-macos-x64
      - run: npx pkg . --targets node18-macos-arm64 --output dist/uni-orm-node18-macos-arm64
      - run: ls -la dist

      - name: Upload build artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: macos-binaries-${{ github.run_id }}
          path: |
            dist/uni-orm-node18-macos-x64
            dist/uni-orm-node18-macos-arm64

      - name: Upload to GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/uni-orm-node18-macos-x64
            dist/uni-orm-node18-macos-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: windows binaries
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm ci

      # build with explicit output name
      - run: npx pkg . --targets node18-win-x64 --output dist/uni-orm-node18-win-x64.exe
      - run: Get-ChildItem dist

      - name: Upload build artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries-${{ github.run_id }}
          path: dist\uni-orm-node18-win-x64.exe

      - name: Upload to GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          files: dist\uni-orm-node18-win-x64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
